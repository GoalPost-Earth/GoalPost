interface PersonInterface {
  id: ID!
  firstName: String!
  lastName: String!
  fullName: String!
  phone: String
  email: String
  gender: String
  location: String
  createdAt: DateTime!
  updatedAt: DateTime
}

type Person implements PersonInterface @node(labels: ["Person"]) {
  id: ID! @id
  firstName: String!
  lastName: String!
  fullName: String! @customResolver(requires: "firstName lastName")
  phone: String
  email: String
  manual: String
  interests: String
  gender: String
  pronouns: String
  location: String
  createdAt: DateTime!
    @timestamp(operations: [CREATE])
    @settable(onCreate: true, onUpdate: false)
  updatedAt: DateTime
    @timestamp(operations: [UPDATE])
    @settable(onCreate: false, onUpdate: true)
}

type Member implements PersonInterface @node(labels: ["Member"]) {
  id: ID! @id
  authId: String!
  firstName: String!
  lastName: String!
  fullName: String! @customResolver(requires: "firstName lastName")
  phone: String
  email: String
  gender: String
  location: String
  createdAt: DateTime!
    @timestamp(operations: [CREATE])
    @settable(onCreate: true, onUpdate: false)
  updatedAt: DateTime
    @timestamp(operations: [UPDATE])
    @settable(onCreate: false, onUpdate: true)
  community: [Community!]! @relationship(type: "BELONGS_TO", direction: OUT)
}

type Area @node {
  id: ID! @id
  name: String!
  region: String!
  state: String!
  distance: Float!
  country: String!
  city: String!
  createdAt: DateTime!
    @timestamp(operations: [CREATE])
    @settable(onCreate: true, onUpdate: false)
  updatedAt: DateTime
    @timestamp(operations: [UPDATE])
    @settable(onCreate: false, onUpdate: true)
}

type CarePoint @node {
  id: ID! @id
  description: String!
  status: String!
  createdAt: DateTime!
    @timestamp(operations: [CREATE])
    @settable(onCreate: true, onUpdate: false)
  updatedAt: DateTime
    @timestamp(operations: [UPDATE])
    @settable(onCreate: false, onUpdate: true)
}

type Community @node {
  id: ID! @id
  name: String!
  createdAt: DateTime!
    @timestamp(operations: [CREATE])
    @settable(onCreate: true, onUpdate: false)
  updatedAt: DateTime
    @timestamp(operations: [UPDATE])
    @settable(onCreate: false, onUpdate: true)
}

type CoreValue @node {
  id: ID! @id
  name: String!
}

type Goal @node {
  id: ID! @id
  name: String!
  type: String!
  description: String!
  caresFor: String
  successMeasures: String
  photo: String
  status: Boolean
  location: String
  time: String
  createdAt: DateTime!
    @timestamp(operations: [CREATE])
    @settable(onCreate: true, onUpdate: false)
  updatedAt: DateTime
    @timestamp(operations: [UPDATE])
    @settable(onCreate: false, onUpdate: true)
}
